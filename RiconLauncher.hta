<!DOCTYPE html>
<html>
<head>
    <title>Ricon Fn</title>
    <hta:application
        id="RiconFN"
        applicationname="RiconFN"
        icon="./img/logo.ico"
        border="thin"
        caption="yes"
        contextmenu="yes"
        innerborder="yes"
        maximizebutton="yes"
        minimizebutton="yes"
        scroll="no"
        selection="yes"
        sysmenu="yes"
        windowstate="normal"
    />
    <meta charset="UTF-8">
    <link rel="icon" href="./img/logo.ico" type="image/x-icon">
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f4;
        }
        .header {
            background-color: #333;
            color: #fff;
            padding: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            text-align: center;
        }
        .header img {
            width: 32px;
            height: 32px;
            margin-right: 10px;
        }
        .header h1 {
            margin: 0;
        }
        .content, .settings {
            padding: 20px;
        }
        .settings {
            display: none; /* Default to hidden */
        }
        .button {
            display: inline-block;
            padding: 10px 20px;
            margin: 10px;
            color: #fff;
            background-color: #007BFF;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            text-align: center;
        }
        .button:hover {
            background-color: #0056b3;
        }
        .container {
            display: grid;
            align-items: center;
            grid-template-columns: 1fr 1fr 1fr;
            column-gap: 5px;
        }
        .image {
            width: 100%;
            max-width: 200px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <img src="./img/logo.ico" alt="Icon" style="width:100%;max-width:200px;height:100%;max-height:200px;">
            <h1>Ricon FN</h1>
        </div>
    </div>    
    <div id="content" class="content">
        <button class="button" onclick="launchGame()">Launch Game</button>
        <button class="button" onclick="showSettings()">Settings</button>
    </div>
    <div id="settings" class="settings">
    	<button class="button" onclick="loadSettings()">Load Settings</button> <!-- New Load Settings button -->
    	<button class="button" onclick="hideSettings()">Back</button>
    	<h2>Settings</h2>
    	<label for="gameLocation">Game Location:</label>
    	<input type="text" id="gameLocation" name="gameLocation" readonly>
    	<button onclick="selectGameFolder()">Select Folder</button>
	    <br>
	    <label for="dllLocation">DLL Location:</label>
	    <input type="text" id="dllLocation" name="dllLocation" readonly>
	    <button onclick="selectDllFile()">Select DLL File</button>
	    <br>
	    <button id="saveSettings" class="button" onclick="SaveSettings()" style="display: none;">Save Settings</button>
	    <p id="settingsWarning" style="display: none; color: red;">Settings have changed. Don't forget to save!</p>
	</div>


    <script language="vbscript">
    Dim gameLocation, dllLocation, previousGameLocation, previousDllLocation

    Sub selectGameFolder()
        Dim objShell
        Set objShell = CreateObject("Shell.Application")
        Set folder = objShell.BrowseForFolder(0, "Select Game Folder", &H1 + &H10)
        If Not folder Is Nothing Then
            gameLocation = folder.Self.Path
            document.getElementById("gameLocation").value = gameLocation
            CheckSettingsChanged
        End If
    End Sub

    Sub selectDllFile()
        Dim objDialog, selectedFile
        Set objDialog = CreateObject("MSComDlg.CommonDialog")
        
        ' Set dialog properties
        objDialog.Filter = "DLL Files|*.dll"
        objDialog.MaxFileSize = 255
        
        ' Show the dialog
        objDialog.ShowOpen
        
        ' Get the selected file
        selectedFile = objDialog.FileName
        
        If selectedFile <> "" Then
            dllLocation = selectedFile
            document.getElementById("dllLocation").value = dllLocation
            CheckSettingsChanged
        End If
    End Sub

    Function launchGame()
        Dim launcherPath
        If gameLocation = "" Or dllLocation = "" Then
            MsgBox "Please select both the game location and DLL location."
            Exit Function
        End If

        If Not folderExists(gameLocation & "\FortniteGame") Or Not folderExists(gameLocation & "\Engine") Then
            MsgBox "The selected game folder does not contain the required subfolders: FortniteGame and Engine."
            Exit Function
        End If

        launcherPath = gameLocation & "\FortniteGame\Binaries\Win64\FortniteClient-Win64-Shipping.exe"
        If Not fileExists(launcherPath) Then
            MsgBox "The game launcher executable could not be found at: " & launcherPath
            Exit Function
        End If

        ' Launch the game with specified properties
        Dim objShell
        Set objShell = CreateObject("WScript.Shell")
        objShell.Run "cmd.exe /K echo [" & Now & "] RICONFN LAUNCHER LOG: Game launched.", 1, False

        objShell.Run Chr(34) & launcherPath & Chr(34) & " -epicapp=Fortnite -epicenv=Prod -epicportal -epiclocale=en-us -skippatchcheck -NOSSLPINNING -FORCECONSOLE", 1, True

        ' Wait for Fortnite process to start
        WaitForProcess "FortniteClient-Win64-Shipping.exe"

        ' Inject the DLL (Cobalt) after a delay of 2 seconds
        WScript.Sleep 2000 ' 2 seconds delay
        injectDLL gameLocation, dllLocation

        MsgBox "Game launched and DLL injected."
    End Function

    Function showSettings()
        document.getElementById("content").style.display = "none"
        document.getElementById("settings").style.display = "block"
        ' Store previous settings for comparison
        previousGameLocation = gameLocation
        previousDllLocation = dllLocation
    End Function

    Function hideSettings()
        document.getElementById("settings").style.display = "none"
        document.getElementById("content").style.display = "block"
    End Function

    Function folderExists(folderPath)
        Dim fso
        Set fso = CreateObject("Scripting.FileSystemObject")
        folderExists = fso.FolderExists(folderPath)
    End Function

    Function fileExists(filePath)
        Dim fso
        Set fso = CreateObject("Scripting.FileSystemObject")
        fileExists = fso.FileExists(filePath)
    End Function

    Sub CheckSettingsChanged()
        If gameLocation <> previousGameLocation Or dllLocation <> previousDllLocation Then
            document.getElementById("saveSettings").style.display = "inline"
        Else
            document.getElementById("saveSettings").style.display = "none"
        End If
    End Sub

    Sub SaveSettings()
        Dim fso, file, settings
        Set fso = CreateObject("Scripting.FileSystemObject")
        Set file = fso.CreateTextFile("settings.txt", True)
        
        ' Format the settings
        settings = "Game_Location:" & Chr(34) & gameLocation & Chr(34) & vbCrLf
        settings = settings & "DLL_Location:" & Chr(34) & dllLocation & Chr(34)
        
        ' Write settings to file
        file.Write settings
        file.Close
        
        MsgBox "Settings saved successfully."
        document.getElementById("saveSettings").style.display = "none"
    End Sub

    Sub WaitForProcess(processName)
        Dim objWMIService, colProcesses, objProcess
        Dim targetPID, found
        found = False
        Do Until found
            ' Get the WMI service
            Set objWMIService = GetObject("winmgmts:\\.\root\cimv2")
            ' Get the target process
            Set colProcesses = objWMIService.ExecQuery("Select * from Win32_Process Where Name='" & processName & "'")
            For Each objProcess In colProcesses
                targetPID = objProcess.ProcessId
                found = True
                Exit For
            Next
            If Not found Then
                WScript.Sleep 1000 ' 1 second delay
            End If
        Loop
    End Sub

    Sub injectDLL(gamePath, dllPath)
        Dim objShell, objWMIService, objProcess, colProcesses
        Dim processName, targetPID
        Dim kernel32, loadLibraryAddr, processHandle, remoteMemory, result

        ' Get the process name from the game path
        processName = "FortniteLauncher.exe"

        ' Get the WMI service
        Set objWMIService = GetObject("winmgmts:\\.\root\cimv2")

        ' Get the target process
        Set colProcesses = objWMIService.ExecQuery("Select * from Win32_Process Where Name='" & processName & "'")
        For Each objProcess In colProcesses
            targetPID = objProcess.ProcessId
            Exit For
        Next

        ' Inject the DLL
        If Not IsEmpty(targetPID) Then
            ' Open the target process
            Set kernel32 = CreateObject("DynamicWrapperX")
            kernel32.Register "Kernel32.dll", "OpenProcess", "I=LLI", "F=I"
            processHandle = kernel32.OpenProcess(&H1F0FFF, False, targetPID)

            ' Allocate memory in the target process
            kernel32.Register "Kernel32.dll", "VirtualAllocEx", "I=IIII", "F=I"
            remoteMemory = kernel32.VirtualAllocEx(processHandle, 0, Len(dllPath) + 1, &H1000 Or &H2000, &H40)

            ' Write the DLL path into the allocated memory
            kernel32.Register "Kernel32.dll", "WriteProcessMemory", "I=IIIP", "F=I"
            result = kernel32.WriteProcessMemory(processHandle, remoteMemory, dllPath, Len(dllPath) + 1, 0)

            ' Get the address of LoadLibraryA
            kernel32.Register "Kernel32.dll", "GetProcAddress", "I=IS", "F=I"
            loadLibraryAddr = kernel32.GetProcAddress(kernel32.GetModuleHandle("Kernel32.dll"), "LoadLibraryA")

            ' Create a remote thread to load the DLL
            kernel32.Register "Kernel32.dll", "CreateRemoteThread", "I=ILLLLLLI", "F=I"
            result = kernel32.CreateRemoteThread(processHandle, 0, 0, loadLibraryAddr, remoteMemory, 0, 0)

            ' Check for success
            If result = 0 Then
                MsgBox "DLL injection failed!", vbCritical
            Else
                MsgBox "DLL injection succeeded!", vbInformation
            End If

            ' Clean up
            kernel32.CloseHandle processHandle
        Else
            MsgBox "Target process not found!", vbCritical
        End If
    End Sub
	Sub loadSettings()
	    MsgBox "Loading settings..."
	    Dim fso, file, settings, arrSettings
	    Set fso = CreateObject("Scripting.FileSystemObject")
	    If fso.FileExists("settings.txt") Then
	        Set file = fso.OpenTextFile("settings.txt", 1)
	        settings = file.ReadAll
	        file.Close
	        
	        MsgBox "Settings file read successfully."
	        
	        ' Split settings into an array
	        arrSettings = Split(settings, vbCrLf)
	
	        ' Output loaded settings to console
	        Dim setting
	        For Each setting In arrSettings
	            MsgBox setting
	        Next
	
	        MsgBox "Settings loaded successfully."
	    Else
	        MsgBox "Settings file not found."
	    End If
	End Sub

    </script>
</body>
</html>